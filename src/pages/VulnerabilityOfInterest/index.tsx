import * as React from "react";
import Grid from "@mui/material/Grid";
import Card from "@mui/material/Card";

import MKBox from "../../components/MKBox";
import routes from "../../routes";
import VulnerablitiDisplay from "./VulnerablitiDisplay";
import MKTypography from "../../components/MKTypography";
import VulnerabilitiesCount from "./VulnerabilitiesCount";
import { vulnerabilityOffInterest } from "../../dataStore";
import { fetchJsonData } from "../BesVersionHistory/AssessmentReport";
import ProjectLogo from "../../assets/images/security-system.png";
import EcoSystem from "./EcoSystem";
import theme from "../../assets/theme";
import ScrollableTabsButtonVisibleVUL from "./FilterVoi";
import DefaultNavbar from "../../components/Navbars/DefaultNavbar";

function countEcosystem(reports: any) {
  const regex = /^([^:]+)/gm;
  const ecosystemCount: any = {};
  const ecosystemData: any = [];
  for (const report of reports) {
    const visitedPackage: any = {};
    report.affected.forEach((packageData: any) => {
      const packageName = packageData.package.ecosystem.match(regex);
      if (!visitedPackage[packageName]) {
        if (!ecosystemCount[packageName[0]]) {
          ecosystemCount[packageName[0]] = 0;
        }
        ecosystemCount[packageName[0]]++;
        visitedPackage[packageName] = true;
      }
    });
  }

  for (const ecosystem of Object.keys(ecosystemCount)) {
    ecosystemData.push({ label: ecosystem, value: ecosystemCount[ecosystem] });
  }
  return ecosystemData;
}

function VulnerabilityOfInterest() {
  const [report, setreport]: any = React.useState([]);
  let data: any = [];
  React.useEffect(() => {
    fetchJsonData(vulnerabilityOffInterest, setreport);
  }, []);
  if (report.length > 0) {
    data = countEcosystem(report);
  }
  const [filterData, setFilterData]: any = React.useState({
    EcoSystem: "",
    Fix: ""
  });

  return (
    <>
      <DefaultNavbar routes={ routes } sticky />
      <MKBox pt={ 10 } sx={ { mx: { xs: 2, lg: 3 } } }>
        <MKTypography variant="h3" color="black">
          Vulnerabilities of Interest
        </MKTypography>
        <MKTypography
          display="flex"
          alignItems="left"
          color="black"
          paddingTop="2px"
          fontSize="18px"
          width="100%"

          style={ { fontWeight: "lighter" } }
        >
          Explore and stay informed about vulnerabilities detected in the
          open-source projects tracked under Be-Secure. Our commitment is to provide
          transparency and actionable insights to help you manage the security
          of your software supply chain effectively.
        </MKTypography>
      </MKBox>

      <MKBox pt={ 1 } sx={ { mx: { xs: 2, lg: 3 } } }>
        <Grid container spacing={ 3 }>
          <Grid item xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 4 }>
            <VulnerabilitiesCount
              title="Vulnerabilities tracked"
              total={ report.length }
              color="success"
              icon={
                <img

                  style={ { width: "140px", top: "58px", position: "absolute" } }
                  alt="icon"
                  src={ ProjectLogo }
                />
              }
              sx={ { width: "100%", height: "244px" } }
            />
          </Grid>
          <Grid item xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 4 }>
            <EcoSystem
              title="EcoSystem"
              chartData={ data }
              chartColors={ [
                theme.palette.primary.main,
                theme.palette.info.main,
                theme.palette.warning.main,
                theme.palette.error.main,
                theme.palette.success.main,
                theme.palette.secondary.main
              ] }
            />
          </Grid>
          <Grid item xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 4 }>
            <EcoSystem
              title="Fix"
              chartColors={ [
                theme.palette.primary.main,
                theme.palette.info.main,
                theme.palette.warning.main,
                theme.palette.error.main,
                theme.palette.success.main,
                theme.palette.secondary.main
              ] }
              chartData={ report.length === 0 ? [] : [
                { label: "Fix Available", value: 15 },
                { label: "No Fix Available", value: 0 }
              ] }
            />
          </Grid>
        </Grid>
      </MKBox>
      <ScrollableTabsButtonVisibleVUL
        filter={ filterData }
        setFilter={ setFilterData }
      />
      <MKBox pt={ 1 } pb={ 3 }>
        <Card sx={ { mx: { xs: 2, lg: 3 } } }>
          <MKBox>
            <VulnerablitiDisplay report={ report } selectedFilter={ filterData } />
          </MKBox>
        </Card>
      </MKBox>
    </>
  );
}

export default VulnerabilityOfInterest;
